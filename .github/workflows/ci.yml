# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: WS2G push & PR CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    # - name: Run ruff
    #   run: poetry run ruff check . -v
    # - name: Run black (dry run)
    #   run: poetry run black --check . -v
    - name: Build and install package
      run: |
        poetry build
        pip install dist/$(ls dist | grep .*.whl) 
    - name: Install pytest
      run: pip install pytest
    - name: Install pytest-cov
      run: pip install pytest-cov
    - name: Run unit tests 3
      if: always()
      # https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
      run: pytest
    - name: Run unit tests x
      if: always()
      # https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
      run: python -m pytest test
    - name: Run unit tests 4
      if: always()
      # https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
      run: python -m pytest
    - name: Run unit tests 7
      if: always()
      # https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
      run: pytest tests
    - name: Run unit tests 8
      if: always()
      # https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
      run: python -m pytest tests
    - uses: mr-smithers-excellent/docker-build-push@v6
      name: Build & push Docker image
      with:
        image: arazi99/ws2g
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
